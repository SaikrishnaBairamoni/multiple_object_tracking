name: CI
on:
  push:
  pull_request:
jobs:
  build:
    defaults:
      run:
        shell: bash
        working-directory: "/opt/carma/"
    runs-on: ubuntu-latest
    container:
      image: usdotfhwastoldev/autoware.ai:develop
      env:
        INIT_ENV: "/home/carma/.base-image/init-env.sh"
        ROS_2_ENV: "/opt/ros/foxy/setup.bash"
        BUILD_WRAPPER_OUT_DIR: "/opt/carma/src/multiple_object_tracking/build/bw-output"
        SONAR_SCANNER_VERSION: "5.0.1.3006"
        TERM: xterm
      options: "--user root"
    steps:
    - name: Checkout ${{ github.event.repository.name }}
      uses: actions/checkout@v3.3.0
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        path: src/${{ github.event.repository.name }}
    - name: Install Dlib
      run: sudo apt-get update && sudo apt-get install -y libdlib-dev
    - name: Move source code
      run: mv $GITHUB_WORKSPACE/src /opt/carma/
    - name: Set up Python 3.8 for gcovr
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install Gcovr 5.0
      run: |
        curl -L -o gcovr https://github.com/gcovr/gcovr/archive/5.0.tar.gz
        tar -xzvf gcovr
        cd gcovr-5.0
        chmod +x gcovr
    - name: Install Sonar
      run: |
        SONAR_DIR=/opt/sonarqube
        mkdir $SONAR_DIR
        curl -o $SONAR_DIR/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip
        curl -o $SONAR_DIR/build-wrapper.zip https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
        curl -sL https://deb.nodesource.com/setup_16.x |bash -
        apt-get install -y nodejs unzip
        cd $SONAR_DIR
        for ZIP in *.zip; do
          unzip "$ZIP" -d .
          rm "$ZIP"
        done
        mv $(ls $SONAR_DIR |grep "sonar-scanner-") $SONAR_DIR/sonar-scanner/
        mv $(ls $SONAR_DIR |grep "build-wrapper-") $SONAR_DIR/build-wrapper/
        echo $SONAR_DIR/sonar-scanner/bin >> $GITHUB_PATH
        echo $SONAR_DIR/build-wrapper >> $GITHUB_PATH
    # - name: Install sonar-scanner and build-wrapper
    #   uses: SonarSource/sonarcloud-github-c-cpp@v1
    - name: Build & Run Tests
      run: |
        source "$INIT_ENV"
        source "$ROS_2_ENV"
        chmod 755  -R /opt/carma/src
        cd /opt/carma/src/multiple_object_tracking/
        mkdir build
        cmake -S . -B build
        build-wrapper-linux-x86-64 --out-dir /opt/carma/src/multiple_object_tracking/build/bw-output cmake --build build/ --config Release
        cd build
        ctest --output-on-failure
        gcovr --xml -o coverage.xml
    - name: Find coverage.xml
      shell: bash
      run: |
        find "/opt/carma/src/multiple_object_tracking/build/" -name "coverage.xml"
    - name: Run SonarScanner
      uses: usdot-fhwa-stol/actions/sonar-scanner@main
      with:
        sonar-token: ${{ secrets.SONAR_TOKEN }}
        working-dir: "/opt/carma/src/${{ github.event.repository.name }}"
